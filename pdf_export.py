# pdf_export.py

import streamlit as st
from fpdf import FPDF
from firebase_init import get_db
from datetime import datetime
from utils import format_date
import os
from auth import require_login

db = get_db()

# ----------------------------
# ðŸ“„ Generate Event Summary PDF
# ----------------------------

def generate_event_summary_pdf(event_id: str) -> None:
    """Generates a post-event summary PDF for the given event."""
    event = get_db().collection("events").document(event_id).get().to_dict()
    if not event:
        st.error("Event not found.")
        return

    summary = event.get("post_event_summary")
    if not summary:
        st.error("No post-event summary available.")
        return

    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)

    pdf.set_title(f"Event Summary: {event.get('name')}")

    def add_section(title: str, body: str) -> None:
        pdf.set_font("Arial", 'B', 14)
        pdf.cell(200, 10, txt=title, ln=1)
        pdf.set_font("Arial", size=12)
        pdf.multi_cell(0, 10, txt=body or "N/A")
        pdf.ln(5)

    # Title
    pdf.set_font("Arial", 'B', 16)
    pdf.cell(200, 10, txt=f"ðŸ“‹ Event Summary: {event.get('name')}", ln=1, align='L')
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt=f"Date: {format_date(event.get('date'))} | Location: {event.get('location')}", ln=1)
    pdf.ln(5)

    # Sections
    pop_data = summary.get("menu_popularity", {})
    if pop_data:
        pop_text = "\n".join([f"{k}: {v}/5" for k, v in pop_data.items()])
        add_section("Menu Popularity", pop_text)

    add_section("Leftovers / Overages", summary.get("leftovers_notes", ""))
    add_section("Timing Issues", summary.get("timing_issues", ""))
    add_section("Improvements", summary.get("improvements", ""))
    add_section("Forgotten / Missing Items", summary.get("forgotten_items", ""))

    pdf.ln(10)
    pdf.set_font("Arial", 'I', 10)
    pdf.cell(200, 10, txt=f"Generated by Mountain Medicine â€” {datetime.utcnow().isoformat()} UTC", ln=1)

    filename = f"event_summary_{event_id}.pdf"
    filepath = os.path.join("/tmp", filename)
    pdf.output(filepath)

    with open(filepath, "rb") as f:
        st.download_button("ðŸ“¥ Download PDF", f, file_name=filename)

    os.remove(filepath)

# ----------------------------
# ðŸ“„ Full-Page UI for app.py
# ----------------------------

def pdf_export_ui(user=None):
    st.title("ðŸ“„ Export Post-Event Summary")

    event_id = st.text_input("Enter Event ID")
    if event_id and st.button("Generate PDF"):
        generate_event_summary_pdf(event_id)
