rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ NEW - User Collection Rules for Google OAuth
    match /users/{userId} {
      allow read, write: if true; // Temporary - allows all user operations
    }

    // ✅ PRESERVED - Your existing notifications rules
    match /notifications/{notifId} {
      allow read, write: if
        request.auth != null &&
        (
          // allow user to access only their own notifications
          request.resource.data.to_user_id == request.auth.token.email ||
          // allow developer account full access
          request.auth.token.email == "admin@mountainmedicine.dev"
        );
    }

    // ✅ Core Collections (require login)
    match /events/{eventId} {
      allow read, write: if request.auth != null;
    }

    match /menus/{menuId} {
      allow read, write: if request.auth != null;
    }

    match /files/{fileId} {
      allow read, write: if request.auth != null;
    }

    match /receipts/{receiptId} {
      allow read, write: if request.auth != null;
    }

    match /suggestions/{suggestionId} {
      allow read, write: if request.auth != null;
    }

    match /tags/{tagId} {
      allow read, write: if request.auth != null;
    }

    match /ingredients/{ingredientId} {
      allow read, write: if request.auth != null;
    }

    match /logs/{logId} {
      allow read, write: if request.auth != null;
    }

    match /config/{configId} {
      allow read, write: if request.auth != null;
    }

    // ✅ Conversations collection for AI Chat
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId == request.auth.uid;
      }
    }

    // ✅ Special Recipe Rules — Public Read, Role-based Write
    match /recipes/{recipeId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role in ['admin', 'manager'];
      
      // Recipe versions subcollection
      match /versions/{versionId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.token.role in ['admin', 'manager'];
      }
    }

    // ✅ Event Subcollections
    match /events/{eventId}/shopping_items/{itemId} {
      allow read, write: if request.auth != null;
    }

    match /events/{eventId}/equipment/{equipmentId} {
      allow read, write: if request.auth != null;
    }

    match /events/{eventId}/tasks/{taskId} {
      allow read, write: if request.auth != null;
    }

    match /events/{eventId}/allergies/{allergyId} {
      allow read, write: if request.auth != null;
    }
  }
}